/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var tabl = document.getElementById('tictactoe');
var fields = tabl.getElementsByTagName("td");
var imgs = tabl.getElementsByTagName("img");

// reset
var resetFields = function resetFields() {
  for (var i = 0; i < fields.length; i++) {
    fields[i].setAttribute('data-player', 'blank');
    fields[i].setAttribute('class', 'default');
  }
};
var resetImgs = function resetImgs() {
  for (var i = 0; i < imgs.length; i++) {
    imgs[i].setAttribute('src', 'http://localhost:3000/img/transparent.gif');
  }
};
// getter
var getPlayerFields = function getPlayerFields() {
  var i = 0;
  var player = document.querySelectorAll('.player');
  for (i; i < player.length; i++) {
    i;
    //playerFields.push(i)
  }
  return i;
};
var getAiFields = function getAiFields() {
  var i = 0;
  var playerFields = [];
  var player = document.querySelectorAll('.ai');
  for (i; i < player.length; i++) {
    i;
  }
  return i;
};
// setter
var setPlayerField = function setPlayerField() {
  var _loop = function _loop(i) {

    fields[i].addEventListener("click", function () {

      imgs[i].setAttribute('src', 'http://localhost:3000/img/cross.svg');
      this.setAttribute('class', 'player');
      this.setAttribute('data-player', 'player');
      var amountMoves = getMoves();
      this.setAttribute('data-counter', amountMoves);
      console.log(amountMoves);
    });
  };

  for (var i = 0; i < fields.length; i++) {
    _loop(i);
  }
};
var getMoves = function getMoves() {
  var numPlayer = getPlayerFields();
  var numAi = getAiFields();
  var amountMoves = numAi + numPlayer;

  return amountMoves;
};
document.onreadystatechange = function () {
  if (document.readyState === 'complete') {
    resetFields();
    resetImgs();
    getPlayerFields();
    getAiFields();
    setPlayerField();
  }
};

/***/ })
/******/ ]);